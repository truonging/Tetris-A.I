from numba import njit
import numpy as np


@njit
def fast_sample(batch_size: int, probabilities: np.ndarray) -> np.ndarray:
    # Generate cumulative sum of probabilities (like a CDF)
    cumulative_probs = np.cumsum(probabilities)
    random_vals = np.random.rand(batch_size)

    # For each random value, find the corresponding index using binary search
    indices = np.searchsorted(cumulative_probs, random_vals)
    return indices


@njit
def get_states_fast(board):
    max_row_indices = np.argmax(board, axis=0)
    cols = np.where(np.sum(board, axis=0) == 0, 0, 20 - max_row_indices)
    bumpiness = np.sum(np.abs(np.diff(cols)))
    total_heights = np.sum(cols)
    return cols, total_heights, bumpiness


tst = [0.9574618339538574, 1.0780868530273438, 9.955280303955078, 4.444355487823486, 17.603099822998047, 23.681934356689453, 12.865041732788086, 7.406424522399902, 49.94914627075195, 18.603679656982422, 93.3079605102539, 25.95961570739746, 53.43779754638672, 49.54551696777344, 34.93963623046875, 35.934383392333984, 8.858987808227539, 88.19979858398438, 55.720149993896484, 18.617090225219727, 25.904464721679688, 99.78998565673828, 135.8281707763672, 137.27114868164062, 33.68687438964844, 73.42084503173828, 97.22067260742188, 100.05431365966797, 80.08049011230469, 80.46965026855469, 39.502105712890625, 76.57616424560547, 42.263248443603516, 32.66176986694336, 126.30216979980469, 123.22296142578125, 156.81532287597656, 113.5536880493164, 62.86906433105469, 41.545711517333984, 21.820024490356445, 62.11841583251953, 82.67048645019531, 115.14796447753906, 106.09163665771484, 145.66909790039062, 172.4192657470703, 178.6018829345703, 174.5615234375, 91.50312042236328, 40.710609436035156, 83.9059829711914, 92.8108139038086, 154.51458740234375, 120.5770034790039, 128.2279815673828, 134.83680725097656, 153.98580932617188, 93.34435272216797, 147.2476348876953, 89.3647232055664, 140.74720764160156, 42.561126708984375, 116.42046356201172, 92.88414001464844, 55.49193572998047, 43.27719497680664, 91.05313110351562, 34.75337600708008, 215.8608856201172, 263.023193359375, 205.83375549316406, 197.38523864746094, 203.55101013183594, 169.61834716796875, 255.87110900878906, 116.58551788330078, 96.73006439208984, 79.49942779541016, 283.06640625, 93.33574676513672, 193.91488647460938, 33.796836853027344, 262.33331298828125, 88.26288604736328, 225.51356506347656, 106.00257873535156, 183.81253051757812, 168.8426971435547, 118.38752746582031, 219.44654846191406, 253.30218505859375, 172.2328643798828, 222.41346740722656, 266.89617919921875, 297.2092590332031, 181.854736328125, 199.9833221435547, 181.0819549560547, 327.75323486328125, 233.024169921875, 247.7063446044922, 90.37926483154297, 302.8845520019531, 146.21548461914062, 217.70718383789062, 120.2440414428711, 192.33103942871094, 164.7774200439453, 181.98098754882812, 120.94720458984375, 215.16226196289062, 175.24095153808594, 235.5317840576172, 241.95535278320312, 162.02320861816406, 194.96929931640625, 225.34194946289062, 253.31613159179688, 286.50848388671875, 291.64385986328125, 284.4757385253906, 245.51397705078125, 210.78866577148438, 156.50741577148438, 133.02989196777344, 132.3738555908203, 197.6118927001953, 123.31906127929688, 143.2545623779297, 106.85369110107422, 167.89614868164062, 127.37287139892578, 153.53448486328125, 54.95347213745117, 223.73870849609375, 126.30172729492188, 223.21131896972656, 168.99034118652344, 246.63430786132812, 258.353271484375, 295.3106384277344, 284.9832458496094, 293.5976867675781, 340.20196533203125, 197.6118927001953]
a = np.array(tst, dtype=np.float32)
boardd = np.array([[0, 0, 1],
                  [1, 0, 1],
                  [0, 1, 0]])

fast_sample(128, a)
get_states_fast(boardd)